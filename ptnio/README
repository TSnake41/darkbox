 _  |_  _  .  _
|_) |_ | ) | (_)
|

ptnio - Portable TCP Network IO
Fully compatible with Dos9 project.

Syntaxes:
  1) ptnio -id:ID -n [-t thread_count]
  2) ptnio -id:ID -c command [command args]

1) Start a new ptnio instance.
  If your ID overrides another instance ID in the same directory, this server
  remains active but gets inaccessible (and must be killed manually).

2) Connect to a ptnio instance to perform a command.

NOTE: ID are directory-dependant, so you can start multiples
      instances if they are in different directories.

Commands list :
  new :
    Syntax : new sock_id [IPv6]
    IPv6 : Use IPv6 instead of IPv4.

    Usage : Create a new socket sock_id.

  free :
    Syntax : free sock_id
    Usage : Close and free sock_id.

  connect :
    Syntax : connect sock_id ip port
    Usage : Connect sock_id to ip:port.

  bind :
    Syntax : bind sock_id ip port
    Usage : Bind socket to port.

  listening :
    Syntax : listen sock_id [n]
    Usage : Prepare to accept connections, allow n pending requests.

    Remarks :
      Socket must be bound to a port.
      If n is not defined, use default system value.

  accept :
    Syntax : accept listner_sock_id [new_sock_id]
    Usage : Accept a pending socket connection of listner_sock_id.

    Remarks :
      If new_sock_id is not defined, define id to "IP:PORT".
      Listner must be listening.

  nms_recv : (testing, might change)
    Syntax : nms_recv sock_id
    Usage : Recieve data from socket using NMS.

    Remarks :
      Output might be piped or redirected.

  nms_send :
    Syntax : nms_send sock_id
    Usage : Send bytes to socket using NMS.

    Remarks :
      Input might be piped or redirected.

  recv :
    Syntax : recv sock_id [<blocking> <count>]
    Usage : Recieve data from socket.
      If arguments are specified :
        - Read <count> bytes in blocking or non-blocking modes.
      Otherwise :
        - Read as much as possible bytes.

    Remarks: Output might be piped or redirected.

  send :
    Syntax : send sock_id
    Usage : Send bytes to socket.

    Remarks:
      Input might be piped or redirected.

  poll :
    Syntax : poll timeout sock_id_1 [...] [sock_id_N]
    Usage :
      Poll for input from sockets using a timeout.
      Returns (by output) availables sockets.

    Example:
      for %%A /f "tokens=*" in ('socket -id:id -c poll -1 a b c') do (
        call :read_from %%A
      )

  info :
    Syntax : info sock_id
    Usage : Get informations of a socket.

    Remarks:
      Output might be piped or redirected.

  list :
    Syntax : list
    Usage : Get socket list.

    Remarks:
      Output might be piped or redirected.

  exit :
    Syntax : exit
    Usage : Kill ptnio instance.

errorlevels :
  0 : No error
  1 : Invalid arguments
  2 : Out of memory
  3 : Network error
  4 : Not found
  5 : sock_id overwritten (info)
  6 : Internal error
  7 : Bind error
  8 : Invalid host
  9 : Data available (info)
  10 : Client (ptnio) internal out of memory
  11 : 0-size NMS packet received (info)
  12 : IPC error (inter-process communication error)
  255 : IPC error : can't receive error code

Build defines :
  FORCE_POLL :
    Force the use of poll() as polling function.

  FORCE_SELECT :
    Force the use of select() as polling function.

  NO_FORK :
    Disable the "forking" ability of ptnio thus improving debugger support.

  AVOID_POINTER_WARNING : (Windows only)
    Remove warnings caused by char's pointers of winsock 2 functions.
    Use it if you get warnings about pointer type.

  GRACEFUL_CLOSE_TIMEOUT (ms) :
    Change max linger time when closing a socket.

  IPC_USE_[backend] :
    Force the use of a specific IPC backend.

    Available backends :
      TCP
      UNIX (for Windows, see notes)

    TCP : Use TCP/IP Sockets, works on all major platforms.
    UNIX : Use UNIX Domain Sockets, works on most *NIX
           (for Windows support, see notes).

    Platforms default backend :
      Windows : TCP
      *NIX : UNIX

    Notes : Windows only supports UNIX domain sockets since Windows 10 Build
            17063 (and probably need some tweaks to make it working).
